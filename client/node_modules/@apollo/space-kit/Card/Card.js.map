{"version":3,"file":"Card.js","sources":["../src/Card/Card.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { colors } from \"../colors\";\nimport { base } from \"../typography\";\nimport { jsx, ClassNames } from \"@emotion/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst descriptionMaxWidth = 760;\n\ninterface CardProps\n  extends React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    CardSectionProps {\n  /**\n   * The content of the card,\n   * appears below the title and description\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Override how the `header` is rendered. You can pass either an intrinisic\n   * jsx element as a string (like \"h1\") or a react element (`<h1 />`)\n   *\n   * If you pass a react element, props that we add are spread onto the input.\n   *\n   * @default \"h2\"\n   */\n  headingAs?: React.ReactElement | keyof JSX.IntrinsicElements;\n\n  /**\n   * large has bigger heading & smaller padding than standard\n   */\n  size?: \"standard\" | \"large\";\n}\n\nexport const Card: React.FC<CardProps> = ({\n  children,\n  heading,\n  actions,\n  description,\n  headingAs = \"h2\",\n  size,\n  ...otherProps\n}) => (\n  <section\n    {...otherProps}\n    css={{\n      backgroundColor: colors.white,\n      color: colors.black.base,\n      boxShadow: `0 1px 3px 0 rgba(0,0,0,.06)`,\n      borderStyle: \"solid\",\n      borderRadius: 8,\n      borderWidth: 1,\n      borderColor: colors.silver.dark,\n      paddingLeft: 24,\n      paddingRight: 24,\n      paddingTop: size === \"large\" ? 16 : 28,\n      paddingBottom: size === \"large\" ? 16 : 28,\n    }}\n  >\n    <div\n      css={{\n        display: \"flex\",\n        marginBottom:\n          (heading || description) &&\n          React.Children.toArray(children).some(Boolean)\n            ? 24\n            : 0,\n      }}\n    >\n      <div\n        css={{\n          flex: \"1 1 0%\",\n          marginRight: \"auto\",\n          overflow: \"hidden\",\n        }}\n      >\n        <div>\n          {heading && (\n            <ClassNames>\n              {({ css, cx }) => {\n                const headingProps = {\n                  className: cx(\n                    css({\n                      color: colors.black.base,\n                      display: \"flex\",\n                      fontWeight: 600,\n                      marginBottom: 0,\n                      marginTop: 0,\n                      ...(size === \"large\" ? base.xlarge : base.large),\n                    }),\n                  ),\n                  children: heading,\n                };\n\n                return React.isValidElement(headingAs)\n                  ? React.cloneElement(headingAs, {\n                      ...headingProps,\n                      className: classnames(\n                        headingProps.className,\n                        headingAs.props.className,\n                      ),\n                    })\n                  : React.createElement(headingAs, headingProps);\n              }}\n            </ClassNames>\n          )}\n          {description && (\n            <div\n              css={{\n                ...base.base,\n                color: colors.grey.base,\n                maxWidth: actions ? descriptionMaxWidth : \"\",\n              }}\n            >\n              {description}\n            </div>\n          )}\n        </div>\n      </div>\n      {actions && <div css={{ marginLeft: 16 }}>{actions}</div>}\n    </div>\n    {children}\n  </section>\n);\n\nCard.propTypes = {\n  children: PropTypes.node,\n  heading: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.node,\n  size: PropTypes.oneOf<CardProps[\"size\"]>([\"standard\", \"large\"]),\n};\n\ninterface CardSectionProps {\n  heading?: React.ReactNode;\n\n  /**\n   * the description for this card\n   * appears in grey below the title\n   */\n  description?: React.ReactNode;\n\n  /**\n   * actions could be a button\n   * or a tooltip or anything the card should display\n   * aligned with the title on the right\n   */\n  actions?: React.ReactNode;\n}\n\nexport const CardSection: React.FC<CardSectionProps> = ({\n  heading,\n  description,\n  actions,\n}) => (\n  <section\n    css={{\n      display: \"flex\",\n      marginTop: 24,\n    }}\n  >\n    <div css={{ flex: \"1 1 0%\", marginRight: \"auto\" }}>\n      <div>\n        {heading && (\n          <div\n            css={{\n              display: \"flex\",\n              color: colors.black.base,\n              ...base.base,\n            }}\n          >\n            <span\n              css={{\n                fontWeight: 600,\n                flex: \"1 1 0%\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n                paddingRight: 24,\n              }}\n            >\n              {heading}\n            </span>\n          </div>\n        )}\n        {description && (\n          <div\n            css={{\n              ...base.base,\n              color: colors.grey.base,\n              maxWidth: actions ? descriptionMaxWidth : \"\",\n            }}\n          >\n            {description}\n          </div>\n        )}\n      </div>\n    </div>\n    {actions && <div css={{ marginLeft: 16 }}>{actions}</div>}\n  </section>\n);\n\nCardSection.propTypes = {\n  heading: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.node,\n};\n\n/**\n * A border line that can go between two card sections, with appropriate margin applied\n */\nexport const CardSeperator: React.FC = () => (\n  <hr\n    css={{\n      height: 1,\n      borderWidth: 0,\n      backgroundColor: colors.silver.dark,\n      marginTop: 24,\n      marginBottom: 24,\n    }}\n  />\n);\n"],"names":["descriptionMaxWidth","Card","_a","children","heading","actions","description","_b","headingAs","size","otherProps","jsx","css","backgroundColor","colors","white","color","black","base","boxShadow","borderStyle","borderRadius","borderWidth","borderColor","silver","dark","paddingLeft","paddingRight","paddingTop","paddingBottom","display","marginBottom","React","Children","toArray","some","Boolean","flex","marginRight","overflow","ClassNames","cx","headingProps","className","fontWeight","marginTop","isValidElement","cloneElement","classnames","props","createElement","grey","maxWidth","marginLeft","propTypes","PropTypes","node","oneOf","CardSection","textOverflow","whiteSpace","CardSeperator","height"],"mappings":"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"}